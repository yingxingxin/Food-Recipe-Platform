Index: src/main/java/org/example/foodrecipeplatform/MealDbAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.foodrecipeplatform;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.json.simple.JSONArray;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\n\npublic class MealDbAPI {\n\n    private static final String API_BASE_URL = \"https://www.themealdb.com/api/json/v1/1/\";\n\n    // Search meals by name\n    public List<CardData> searchMealsByName(String mealName) {\n        String endpoint = API_BASE_URL + \"search.php?s=\" + mealName.replace(\" \", \"%20\");\n        return fetchMeals(endpoint);\n    }\n\n    // Get meals by first letter\n    public List<CardData> getMealsByFirstLetter(char firstLetter) {\n        String endpoint = API_BASE_URL + \"search.php?f=\" + firstLetter;\n        return fetchMeals(endpoint);\n    }\n\n    // Gets a random meal\n    public List<CardData> getRandomMeal() {\n        String endpoint = API_BASE_URL + \"random.php\";\n        return fetchMeals(endpoint);\n    }\n\n    // Gets meal by category\n    public List<CardData> getMealsByCategory(String category) {\n        String endpoint = API_BASE_URL + \"filter.php?c=\" + category.replace(\" \", \"%20\");\n        return fetchMealsFromFilter(endpoint);\n    }\n\n    // Gets meals by cuisine\n    public List<CardData> getMealsByCuisine(String area) {\n        String endpoint = API_BASE_URL + \"filter.php?a=\" + area.replace(\" \", \"%20\");\n        return fetchMealsFromFilter(endpoint);\n    }\n\n    // Gets meals by main ingredient\n    public List<CardData> getMealsByIngredient(String ingredient) {\n        String endpoint = API_BASE_URL + \"filter.php?i=\" + ingredient.replace(\" \", \"%20\");\n        return fetchMealsFromFilter(endpoint);\n    }\n\n \n    // Get detailed meal information by ID\n    public List<CardData> getMealDetails(String mealId) {\n        String endpoint = API_BASE_URL + \"lookup.php?i=\" + mealId;\n\n    // Get meals by country\n    public List<CardData> getMealsByCountry(String Country) {\n        String endpoint = API_BASE_URL + \"filter.php?a=\" + Country;\n\n        return fetchMeals(endpoint);\n    }\n\n    // Gets meals by all categories\n    public List<String> getAllCategories() {\n        String endpoint = API_BASE_URL + \"list.php?c=list\";\n        List<String> categories = new ArrayList<>();\n\n        try {\n            String jsonResponse = makeApiRequest(endpoint);\n            JSONParser parser = new JSONParser();\n            JSONObject json = (JSONObject) parser.parse(jsonResponse);\n            JSONArray categoriesArray = (JSONArray) json.get(\"meals\");\n\n            for (Object item : categoriesArray) {\n                JSONObject category = (JSONObject) item;\n                categories.add((String) category.get(\"strCategory\"));\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return categories;\n    }\n\n    public Map<String, String> getMealIngredients(String mealId) {\n        Map<String, String> ingredients = new HashMap<>();\n        String endpoint = API_BASE_URL + \"lookup.php?i=\" + mealId;\n\n        try {\n            String jsonResponse = makeApiRequest(endpoint);\n            JSONParser parser = new JSONParser();\n            JSONObject json = (JSONObject) parser.parse(jsonResponse);\n            JSONArray mealsArray = (JSONArray) json.get(\"meals\");\n\n            if (mealsArray == null || mealsArray.isEmpty()) {\n                return ingredients;\n            }\n\n            JSONObject meal = (JSONObject) mealsArray.get(0);\n\n            for (int i = 1; i <= 20; i++) {\n                String ingredient = (String) meal.get(\"strIngredient\" + i);\n                String measure = (String) meal.get(\"strMeasure\" + i);\n\n                if (ingredient != null && !ingredient.trim().isEmpty() && !ingredient.equals(\"null\")) {\n                    ingredients.put(ingredient.trim(), measure != null ? measure.trim() : \"\");\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return ingredients;\n    }\n\n    // Helper method to fetch meals from search and lookup endpoints\n    private List<CardData> fetchMeals(String endpoint) {\n        List<CardData> meals = new ArrayList<>();\n\n        try {\n            String jsonResponse = makeApiRequest(endpoint);\n            JSONParser parser = new JSONParser();\n            JSONObject json = (JSONObject) parser.parse(jsonResponse);\n            JSONArray mealsArray = (JSONArray) json.get(\"meals\");\n\n            if (mealsArray == null) {\n                return meals;\n            }\n\n            for (Object item : mealsArray) {\n                JSONObject meal = (JSONObject) item;\n                String mealId = (String) meal.get(\"idMeal\");\n                String mealName = (String) meal.get(\"strMeal\");\n                String mealThumb = (String) meal.get(\"strMealThumb\");\n                String mealInstructions = (String) meal.get(\"strInstructions\");\n\n                // Limit description length\n                String description = mealInstructions != null ?\n                        (mealInstructions.length() > 100 ? mealInstructions.substring(0, 97) + \"...\" : mealInstructions) :\n                        \"No description available\";\n\n                CardData cardData = new CardData(mealName, description, mealThumb);\n                cardData.setMealId(mealId);\n                meals.add(cardData);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return meals;\n    }\n\n    // Helper method to fetch meals from filter endpoints\n    private List<CardData> fetchMealsFromFilter(String endpoint) {\n        List<CardData> meals = new ArrayList<>();\n\n        try {\n            String jsonResponse = makeApiRequest(endpoint);\n            JSONParser parser = new JSONParser();\n            JSONObject json = (JSONObject) parser.parse(jsonResponse);\n            JSONArray mealsArray = (JSONArray) json.get(\"meals\");\n\n            if (mealsArray == null) {\n                return meals; // Return empty list if no meals found\n            }\n\n            for (Object item : mealsArray) {\n                JSONObject meal = (JSONObject) item;\n                String mealId = (String) meal.get(\"idMeal\");\n                String mealName = (String) meal.get(\"strMeal\");\n                String mealThumbnail = (String) meal.get(\"strMealThumbnail\");\n\n                CardData cardData = new CardData(mealName, \"Click for details\", mealThumbnail);\n                cardData.setMealId(mealId);\n                meals.add(cardData);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return meals;\n    }\n\n    // Make HTTP request to API and return response as string\n    private String makeApiRequest(String endpoint) throws IOException {\n        URL url = new URL(endpoint);\n        HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n        connection.setRequestMethod(\"GET\");\n\n        int responseCode = connection.getResponseCode();\n        if (responseCode != 200) {\n            throw new IOException(\"HTTP error code: \" + responseCode);\n        }\n\n        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n        StringBuilder response = new StringBuilder();\n        String line;\n\n        while ((line = reader.readLine()) != null) {\n            response.append(line);\n        }\n        reader.close();\n\n        return response.toString();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/foodrecipeplatform/MealDbAPI.java b/src/main/java/org/example/foodrecipeplatform/MealDbAPI.java
--- a/src/main/java/org/example/foodrecipeplatform/MealDbAPI.java	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ b/src/main/java/org/example/foodrecipeplatform/MealDbAPI.java	(date 1745425120178)
@@ -58,6 +58,8 @@
     // Get detailed meal information by ID
     public List<CardData> getMealDetails(String mealId) {
         String endpoint = API_BASE_URL + "lookup.php?i=" + mealId;
+        return fetchMealsFromFilter(endpoint);
+    }
 
     // Get meals by country
     public List<CardData> getMealsByCountry(String Country) {
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ /dev/null	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]" date="1744817178498" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/org/example/foodrecipeplatform/FoodRecipePlatform.class" />
-    <option name="AFTER_PATH" value="target/classes/org/example/foodrecipeplatform/FoodRecipePlatform.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/FoodRecipePlatform.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_2.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_2.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_2.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_2.xml	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ /dev/null	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]2" date="1744817213508" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]2/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/org/example/foodrecipeplatform/FoodRecipePlatform.class" />
-    <option name="AFTER_PATH" value="target/classes/org/example/foodrecipeplatform/FoodRecipePlatform.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]2/FoodRecipePlatform.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]2/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]2/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]2/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]2/shelved.patch	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ /dev/null	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
@@ -1,174 +0,0 @@
-Index: src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.foodrecipeplatform;\r\n\r\nimport com.google.cloud.firestore.Firestore;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\n// testing commit to see if it still hides the key\r\npublic class FoodRecipePlatform extends Application {\r\n    public static Scene scene;\r\n\r\n    public static Firestore fstore;\r\n    public static FirebaseAuth fauth;\r\n    private final FirestoreContext contxtFirebase = new FirestoreContext();\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        fstore = contxtFirebase.firebase();\r\n        fauth = FirebaseAuth.getInstance();\r\n\r\n        scene = new Scene(loadFXML(\"SignIn\"), 1000, 800);\r\n\r\n        stage.setTitle(\"The Flavor Vault !\");\r\n\r\n        stage.setScene(scene);\r\n        stage.setResizable(true);\r\n        stage.show();\r\n    }\r\n\r\n    // need public static Scene, loadFXML\r\n    public static void setRoot(String fxml) throws IOException {\r\n        scene.setRoot(loadFXML(fxml));\r\n    }\r\n\r\n    private static Parent loadFXML(String fxml) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(FoodRecipePlatform.class.getResource(fxml + \".fxml\"));\r\n        return fxmlLoader.load();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java b/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java
---- a/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java	(revision 7b0c0331fb78198ff004289e3494cdec5a80def8)
-+++ b/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java	(date 1744817198603)
-@@ -23,7 +23,7 @@
-         fstore = contxtFirebase.firebase();
-         fauth = FirebaseAuth.getInstance();
- 
--        scene = new Scene(loadFXML("SignIn"), 1000, 800);
-+        scene = new Scene(loadFXML("RecipeSearchScreen"), 1000, 800);
- 
-         stage.setTitle("The Flavor Vault !");
- 
-Index: src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml b/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml
-new file mode 100644
---- /dev/null	(date 1744817198617)
-+++ b/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml	(date 1744817198617)
-@@ -0,0 +1,61 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+
-+<?import javafx.scene.control.Button?>
-+<?import javafx.scene.control.ComboBox?>
-+<?import javafx.scene.control.Hyperlink?>
-+<?import javafx.scene.control.TextArea?>
-+<?import javafx.scene.control.TextField?>
-+<?import javafx.scene.layout.AnchorPane?>
-+<?import javafx.scene.layout.BorderPane?>
-+<?import javafx.scene.text.Font?>
-+<?import javafx.scene.text.Text?>
-+
-+<AnchorPane prefHeight="695.0" prefWidth="860.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.foodrecipeplatform.Controller.RecipeSearchScreenController">
-+   <children>
-+      <BorderPane layoutX="140.0" layoutY="126.0" prefHeight="441.0" prefWidth="579.0">
-+         <top>
-+            <AnchorPane prefHeight="91.0" prefWidth="579.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <Button fx:id="searchButton" layoutX="128.0" layoutY="50.0" mnemonicParsing="false" onAction="#searchButtonClicked" text="Search" />
-+                  <TextField fx:id="searchTextField" layoutX="180.0" layoutY="50.0" prefHeight="26.0" prefWidth="262.0" promptText="Enter recipe name" />
-+                  <Text layoutX="210.0" layoutY="33.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Food Generator" wrappingWidth="135.20339965820312">
-+                     <font>
-+                        <Font name="System Bold" size="18.0" />
-+                     </font>
-+                  </Text>
-+                  <Hyperlink fx:id="profileHyperlink" layoutX="14.0" layoutY="26.0" text="Profile">
-+                     <font>
-+                        <Font size="13.0" />
-+                     </font>
-+                  </Hyperlink>
-+                  <Hyperlink fx:id="shoppingHyperlink" layoutX="499.0" layoutY="15.0" text="Shopping List" />
-+                  <Hyperlink fx:id="HomePageHyperlink" layoutX="14.0" layoutY="52.0" text="Home Page">
-+                     <font>
-+                        <Font size="13.0" />
-+                     </font>
-+                  </Hyperlink>
-+                  <Hyperlink layoutX="121.0" layoutY="16.0" text="Hyperlink" />
-+               </children>
-+            </AnchorPane>
-+         </top>
-+         <center>
-+            <AnchorPane prefHeight="350.0" prefWidth="580.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <TextArea fx:id="resultTextArea" layoutX="59.0" layoutY="70.0" prefHeight="209.0" prefWidth="303.0" />
-+               </children>
-+            </AnchorPane>
-+         </center>
-+         <left>
-+            <AnchorPane prefHeight="350.0" prefWidth="87.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <Button fx:id="RandomFoodButton" layoutY="14.0" mnemonicParsing="false" text="Random food" />
-+                  <ComboBox layoutX="-1.0" layoutY="57.0" prefHeight="26.0" prefWidth="98.0" promptText="First letter" />
-+                  <ComboBox layoutX="1.0" layoutY="105.0" prefHeight="26.0" prefWidth="86.0" promptText="Country" />
-+                  <Button layoutX="-1.0" layoutY="149.0" mnemonicParsing="false" text="Ingredient" />
-+                  <TextField layoutX="1.0" layoutY="182.0" prefHeight="26.0" prefWidth="94.0" />
-+               </children>
-+            </AnchorPane>
-+         </left>
-+      </BorderPane>
-+   </children>
-+</AnchorPane>
-Index: src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java b/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java
-new file mode 100644
---- /dev/null	(date 1744817198630)
-+++ b/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java	(date 1744817198630)
-@@ -0,0 +1,74 @@
-+package org.example.foodrecipeplatform.Controller;
-+
-+import javafx.event.ActionEvent;
-+import javafx.fxml.FXML;
-+import javafx.scene.control.Button;
-+import javafx.scene.control.Hyperlink;
-+import javafx.scene.control.TextArea;
-+import javafx.scene.control.TextField;
-+import org.example.foodrecipeplatform.CardData;
-+import org.example.foodrecipeplatform.MealDbAPI;
-+
-+import java.util.List;
-+
-+public class RecipeSearchScreenController
-+{
-+    @FXML
-+    public Button searchButton;
-+    @FXML
-+    public TextArea resultTextArea;
-+    @FXML
-+    public TextField searchTextField;
-+    @FXML
-+    public Hyperlink shoppingHyperlink;
-+    @FXML
-+    public Hyperlink HomePageHyperlink;
-+    @FXML
-+    public Button RandomFoodButton;
-+    @FXML
-+    public Hyperlink profileHyperlink;
-+
-+
-+    @FXML
-+    void searchButtonClicked(ActionEvent event)
-+    {
-+        System.out.println("Get Button clicked");
-+        getRecipe();
-+    }
-+
-+    public void getRecipe()
-+    {
-+        MealDbAPI api = new MealDbAPI();
-+        //List<CardData> results = api.getMealsByFirstLetter('a');
-+        List<CardData> results = api.searchMealsByName(searchTextField.getText());
-+
-+
-+        // if the search bar isn't empty
-+        if (!checkSearchBar(searchTextField))
-+        {
-+            if (results.isEmpty())
-+                resultTextArea.setText("No results found\n");
-+            else
-+            {
-+                resultTextArea.clear();
-+                for (CardData cardData : results)
-+                {
-+                    resultTextArea.setText(resultTextArea.getText() + cardData.getFoodName() + "\n");
-+                }
-+            }
-+        }
-+        else // if there is nothing in the search bar
-+        {
-+            resultTextArea.setText("Search bar is empty or doesn't contain only letters\n");
-+        }
-+
-+    }
-+
-+    // make sure the search bar input is valid: no empty string, numbers
-+    // returns false if empty
-+    // returns false if string matches letters, false bc it's going to negate it in the if statement in getRecipe method
-+    private boolean checkSearchBar(TextField searchTextField)
-+    {
-+        return searchTextField.getText().isEmpty() || !searchTextField.getText().matches("[a-zA-Z]*");
-+    }
-+}
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ /dev/null	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]1" date="1744817198995" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/org/example/foodrecipeplatform/FoodRecipePlatform.class" />
-    <option name="AFTER_PATH" value="target/classes/org/example/foodrecipeplatform/FoodRecipePlatform.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/FoodRecipePlatform.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ /dev/null	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
@@ -1,174 +0,0 @@
-Index: src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.foodrecipeplatform;\r\n\r\nimport com.google.cloud.firestore.Firestore;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\n// testing commit to see if it still hides the key\r\npublic class FoodRecipePlatform extends Application {\r\n    public static Scene scene;\r\n\r\n    public static Firestore fstore;\r\n    public static FirebaseAuth fauth;\r\n    private final FirestoreContext contxtFirebase = new FirestoreContext();\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        fstore = contxtFirebase.firebase();\r\n        fauth = FirebaseAuth.getInstance();\r\n\r\n        scene = new Scene(loadFXML(\"SignIn\"), 1000, 800);\r\n\r\n        stage.setTitle(\"The Flavor Vault !\");\r\n\r\n        stage.setScene(scene);\r\n        stage.setResizable(true);\r\n        stage.show();\r\n    }\r\n\r\n    // need public static Scene, loadFXML\r\n    public static void setRoot(String fxml) throws IOException {\r\n        scene.setRoot(loadFXML(fxml));\r\n    }\r\n\r\n    private static Parent loadFXML(String fxml) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(FoodRecipePlatform.class.getResource(fxml + \".fxml\"));\r\n        return fxmlLoader.load();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java b/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java
---- a/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java	(revision c62d2a8e8cdfacca99ee02e9f11965ef4b42269a)
-+++ b/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java	(date 1744738589163)
-@@ -23,7 +23,7 @@
-         fstore = contxtFirebase.firebase();
-         fauth = FirebaseAuth.getInstance();
- 
--        scene = new Scene(loadFXML("SignIn"), 1000, 800);
-+        scene = new Scene(loadFXML("RecipeSearchScreen"), 1000, 800);
- 
-         stage.setTitle("The Flavor Vault !");
- 
-Index: src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml b/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml
-new file mode 100644
---- /dev/null	(date 1744816515053)
-+++ b/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml	(date 1744816515053)
-@@ -0,0 +1,61 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+
-+<?import javafx.scene.control.Button?>
-+<?import javafx.scene.control.ComboBox?>
-+<?import javafx.scene.control.Hyperlink?>
-+<?import javafx.scene.control.TextArea?>
-+<?import javafx.scene.control.TextField?>
-+<?import javafx.scene.layout.AnchorPane?>
-+<?import javafx.scene.layout.BorderPane?>
-+<?import javafx.scene.text.Font?>
-+<?import javafx.scene.text.Text?>
-+
-+<AnchorPane prefHeight="695.0" prefWidth="860.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.foodrecipeplatform.Controller.RecipeSearchScreenController">
-+   <children>
-+      <BorderPane layoutX="140.0" layoutY="126.0" prefHeight="441.0" prefWidth="579.0">
-+         <top>
-+            <AnchorPane prefHeight="91.0" prefWidth="579.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <Button fx:id="searchButton" layoutX="128.0" layoutY="50.0" mnemonicParsing="false" onAction="#searchButtonClicked" text="Search" />
-+                  <TextField fx:id="searchTextField" layoutX="180.0" layoutY="50.0" prefHeight="26.0" prefWidth="262.0" promptText="Enter recipe name" />
-+                  <Text layoutX="210.0" layoutY="33.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Food Generator" wrappingWidth="135.20339965820312">
-+                     <font>
-+                        <Font name="System Bold" size="18.0" />
-+                     </font>
-+                  </Text>
-+                  <Hyperlink fx:id="profileHyperlink" layoutX="14.0" layoutY="26.0" text="Profile">
-+                     <font>
-+                        <Font size="13.0" />
-+                     </font>
-+                  </Hyperlink>
-+                  <Hyperlink fx:id="shoppingHyperlink" layoutX="499.0" layoutY="15.0" text="Shopping List" />
-+                  <Hyperlink fx:id="HomePageHyperlink" layoutX="14.0" layoutY="52.0" text="Home Page">
-+                     <font>
-+                        <Font size="13.0" />
-+                     </font>
-+                  </Hyperlink>
-+                  <Hyperlink layoutX="121.0" layoutY="16.0" text="Hyperlink" />
-+               </children>
-+            </AnchorPane>
-+         </top>
-+         <center>
-+            <AnchorPane prefHeight="350.0" prefWidth="580.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <TextArea fx:id="resultTextArea" layoutX="59.0" layoutY="70.0" prefHeight="209.0" prefWidth="303.0" />
-+               </children>
-+            </AnchorPane>
-+         </center>
-+         <left>
-+            <AnchorPane prefHeight="350.0" prefWidth="87.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <Button fx:id="RandomFoodButton" layoutY="14.0" mnemonicParsing="false" text="Random food" />
-+                  <ComboBox layoutX="-1.0" layoutY="57.0" prefHeight="26.0" prefWidth="98.0" promptText="First letter" />
-+                  <ComboBox layoutX="1.0" layoutY="105.0" prefHeight="26.0" prefWidth="86.0" promptText="Country" />
-+                  <Button layoutX="-1.0" layoutY="149.0" mnemonicParsing="false" text="Ingredient" />
-+                  <TextField layoutX="1.0" layoutY="182.0" prefHeight="26.0" prefWidth="94.0" />
-+               </children>
-+            </AnchorPane>
-+         </left>
-+      </BorderPane>
-+   </children>
-+</AnchorPane>
-Index: src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java b/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java
-new file mode 100644
---- /dev/null	(date 1744816738138)
-+++ b/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java	(date 1744816738138)
-@@ -0,0 +1,74 @@
-+package org.example.foodrecipeplatform.Controller;
-+
-+import javafx.event.ActionEvent;
-+import javafx.fxml.FXML;
-+import javafx.scene.control.Button;
-+import javafx.scene.control.Hyperlink;
-+import javafx.scene.control.TextArea;
-+import javafx.scene.control.TextField;
-+import org.example.foodrecipeplatform.CardData;
-+import org.example.foodrecipeplatform.MealDbAPI;
-+
-+import java.util.List;
-+
-+public class RecipeSearchScreenController
-+{
-+    @FXML
-+    public Button searchButton;
-+    @FXML
-+    public TextArea resultTextArea;
-+    @FXML
-+    public TextField searchTextField;
-+    @FXML
-+    public Hyperlink shoppingHyperlink;
-+    @FXML
-+    public Hyperlink HomePageHyperlink;
-+    @FXML
-+    public Button RandomFoodButton;
-+    @FXML
-+    public Hyperlink profileHyperlink;
-+
-+
-+    @FXML
-+    void searchButtonClicked(ActionEvent event)
-+    {
-+        System.out.println("Get Button clicked");
-+        getRecipe();
-+    }
-+
-+    public void getRecipe()
-+    {
-+        MealDbAPI api = new MealDbAPI();
-+        //List<CardData> results = api.getMealsByFirstLetter('a');
-+        List<CardData> results = api.searchMealsByName(searchTextField.getText());
-+
-+
-+        // if the search bar isn't empty
-+        if (!checkSearchBar(searchTextField))
-+        {
-+            if (results.isEmpty())
-+                resultTextArea.setText("No results found\n");
-+            else
-+            {
-+                resultTextArea.clear();
-+                for (CardData cardData : results)
-+                {
-+                    resultTextArea.setText(resultTextArea.getText() + cardData.getFoodName() + "\n");
-+                }
-+            }
-+        }
-+        else // if there is nothing in the search bar
-+        {
-+            resultTextArea.setText("Search bar is empty or doesn't contain only letters\n");
-+        }
-+
-+    }
-+
-+    // make sure the search bar input is valid: no empty string, numbers
-+    // returns false if empty
-+    // returns false if string matches letters, false bc it's going to negate it in the if statement in getRecipe method
-+    private boolean checkSearchBar(TextField searchTextField)
-+    {
-+        return searchTextField.getText().isEmpty() || !searchTextField.getText().matches("[a-zA-Z]*");
-+    }
-+}
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
+++ /dev/null	(revision 580ca1aa1b2ac78ac18f7ef53da2e3230c4d00bf)
@@ -1,174 +0,0 @@
-Index: src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.foodrecipeplatform;\r\n\r\nimport com.google.cloud.firestore.Firestore;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\n// testing commit to see if it still hides the key\r\npublic class FoodRecipePlatform extends Application {\r\n    public static Scene scene;\r\n\r\n    public static Firestore fstore;\r\n    public static FirebaseAuth fauth;\r\n    private final FirestoreContext contxtFirebase = new FirestoreContext();\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        fstore = contxtFirebase.firebase();\r\n        fauth = FirebaseAuth.getInstance();\r\n\r\n        scene = new Scene(loadFXML(\"SignIn\"), 1000, 800);\r\n\r\n        stage.setTitle(\"The Flavor Vault !\");\r\n\r\n        stage.setScene(scene);\r\n        stage.setResizable(true);\r\n        stage.show();\r\n    }\r\n\r\n    // need public static Scene, loadFXML\r\n    public static void setRoot(String fxml) throws IOException {\r\n        scene.setRoot(loadFXML(fxml));\r\n    }\r\n\r\n    private static Parent loadFXML(String fxml) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(FoodRecipePlatform.class.getResource(fxml + \".fxml\"));\r\n        return fxmlLoader.load();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java b/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java
---- a/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java	(revision 7b0c0331fb78198ff004289e3494cdec5a80def8)
-+++ b/src/main/java/org/example/foodrecipeplatform/FoodRecipePlatform.java	(date 1744817177787)
-@@ -23,7 +23,7 @@
-         fstore = contxtFirebase.firebase();
-         fauth = FirebaseAuth.getInstance();
- 
--        scene = new Scene(loadFXML("SignIn"), 1000, 800);
-+        scene = new Scene(loadFXML("RecipeSearchScreen"), 1000, 800);
- 
-         stage.setTitle("The Flavor Vault !");
- 
-Index: src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml b/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml
-new file mode 100644
---- /dev/null	(date 1744817177807)
-+++ b/src/main/resources/org/example/foodrecipeplatform/RecipeSearchScreen.fxml	(date 1744817177807)
-@@ -0,0 +1,61 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+
-+<?import javafx.scene.control.Button?>
-+<?import javafx.scene.control.ComboBox?>
-+<?import javafx.scene.control.Hyperlink?>
-+<?import javafx.scene.control.TextArea?>
-+<?import javafx.scene.control.TextField?>
-+<?import javafx.scene.layout.AnchorPane?>
-+<?import javafx.scene.layout.BorderPane?>
-+<?import javafx.scene.text.Font?>
-+<?import javafx.scene.text.Text?>
-+
-+<AnchorPane prefHeight="695.0" prefWidth="860.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.foodrecipeplatform.Controller.RecipeSearchScreenController">
-+   <children>
-+      <BorderPane layoutX="140.0" layoutY="126.0" prefHeight="441.0" prefWidth="579.0">
-+         <top>
-+            <AnchorPane prefHeight="91.0" prefWidth="579.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <Button fx:id="searchButton" layoutX="128.0" layoutY="50.0" mnemonicParsing="false" onAction="#searchButtonClicked" text="Search" />
-+                  <TextField fx:id="searchTextField" layoutX="180.0" layoutY="50.0" prefHeight="26.0" prefWidth="262.0" promptText="Enter recipe name" />
-+                  <Text layoutX="210.0" layoutY="33.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Food Generator" wrappingWidth="135.20339965820312">
-+                     <font>
-+                        <Font name="System Bold" size="18.0" />
-+                     </font>
-+                  </Text>
-+                  <Hyperlink fx:id="profileHyperlink" layoutX="14.0" layoutY="26.0" text="Profile">
-+                     <font>
-+                        <Font size="13.0" />
-+                     </font>
-+                  </Hyperlink>
-+                  <Hyperlink fx:id="shoppingHyperlink" layoutX="499.0" layoutY="15.0" text="Shopping List" />
-+                  <Hyperlink fx:id="HomePageHyperlink" layoutX="14.0" layoutY="52.0" text="Home Page">
-+                     <font>
-+                        <Font size="13.0" />
-+                     </font>
-+                  </Hyperlink>
-+                  <Hyperlink layoutX="121.0" layoutY="16.0" text="Hyperlink" />
-+               </children>
-+            </AnchorPane>
-+         </top>
-+         <center>
-+            <AnchorPane prefHeight="350.0" prefWidth="580.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <TextArea fx:id="resultTextArea" layoutX="59.0" layoutY="70.0" prefHeight="209.0" prefWidth="303.0" />
-+               </children>
-+            </AnchorPane>
-+         </center>
-+         <left>
-+            <AnchorPane prefHeight="350.0" prefWidth="87.0" BorderPane.alignment="CENTER">
-+               <children>
-+                  <Button fx:id="RandomFoodButton" layoutY="14.0" mnemonicParsing="false" text="Random food" />
-+                  <ComboBox layoutX="-1.0" layoutY="57.0" prefHeight="26.0" prefWidth="98.0" promptText="First letter" />
-+                  <ComboBox layoutX="1.0" layoutY="105.0" prefHeight="26.0" prefWidth="86.0" promptText="Country" />
-+                  <Button layoutX="-1.0" layoutY="149.0" mnemonicParsing="false" text="Ingredient" />
-+                  <TextField layoutX="1.0" layoutY="182.0" prefHeight="26.0" prefWidth="94.0" />
-+               </children>
-+            </AnchorPane>
-+         </left>
-+      </BorderPane>
-+   </children>
-+</AnchorPane>
-Index: src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java b/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java
-new file mode 100644
---- /dev/null	(date 1744817177827)
-+++ b/src/main/java/org/example/foodrecipeplatform/Controller/RecipeSearchScreenController.java	(date 1744817177827)
-@@ -0,0 +1,74 @@
-+package org.example.foodrecipeplatform.Controller;
-+
-+import javafx.event.ActionEvent;
-+import javafx.fxml.FXML;
-+import javafx.scene.control.Button;
-+import javafx.scene.control.Hyperlink;
-+import javafx.scene.control.TextArea;
-+import javafx.scene.control.TextField;
-+import org.example.foodrecipeplatform.CardData;
-+import org.example.foodrecipeplatform.MealDbAPI;
-+
-+import java.util.List;
-+
-+public class RecipeSearchScreenController
-+{
-+    @FXML
-+    public Button searchButton;
-+    @FXML
-+    public TextArea resultTextArea;
-+    @FXML
-+    public TextField searchTextField;
-+    @FXML
-+    public Hyperlink shoppingHyperlink;
-+    @FXML
-+    public Hyperlink HomePageHyperlink;
-+    @FXML
-+    public Button RandomFoodButton;
-+    @FXML
-+    public Hyperlink profileHyperlink;
-+
-+
-+    @FXML
-+    void searchButtonClicked(ActionEvent event)
-+    {
-+        System.out.println("Get Button clicked");
-+        getRecipe();
-+    }
-+
-+    public void getRecipe()
-+    {
-+        MealDbAPI api = new MealDbAPI();
-+        //List<CardData> results = api.getMealsByFirstLetter('a');
-+        List<CardData> results = api.searchMealsByName(searchTextField.getText());
-+
-+
-+        // if the search bar isn't empty
-+        if (!checkSearchBar(searchTextField))
-+        {
-+            if (results.isEmpty())
-+                resultTextArea.setText("No results found\n");
-+            else
-+            {
-+                resultTextArea.clear();
-+                for (CardData cardData : results)
-+                {
-+                    resultTextArea.setText(resultTextArea.getText() + cardData.getFoodName() + "\n");
-+                }
-+            }
-+        }
-+        else // if there is nothing in the search bar
-+        {
-+            resultTextArea.setText("Search bar is empty or doesn't contain only letters\n");
-+        }
-+
-+    }
-+
-+    // make sure the search bar input is valid: no empty string, numbers
-+    // returns false if empty
-+    // returns false if string matches letters, false bc it's going to negate it in the if statement in getRecipe method
-+    private boolean checkSearchBar(TextField searchTextField)
-+    {
-+        return searchTextField.getText().isEmpty() || !searchTextField.getText().matches("[a-zA-Z]*");
-+    }
-+}
